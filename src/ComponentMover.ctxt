#BlueJ class context
comment0.target=ComponentMover
comment0.text=\r\n\ \ This\ class\ allows\ you\ to\ move\ a\ Component\ by\ using\ a\ mouse.\ The\ Component\r\n\ \ moved\ can\ be\ a\ high\ level\ Window\ (ie.\ Window,\ Frame,\ Dialog)\ in\ which\ case\r\n\ \ the\ Window\ is\ moved\ within\ the\ desktop.\ Or\ the\ Component\ can\ belong\ to\ a\r\n\ \ Container\ in\ which\ case\ the\ Component\ is\ moved\ within\ the\ Container.\r\n\r\n\ \ When\ moving\ a\ Window,\ the\ listener\ can\ be\ added\ to\ a\ child\ Component\ of\r\n\ \ the\ Window.\ In\ this\ case\ attempting\ to\ move\ the\ child\ will\ result\ in\ the\r\n\ \ Window\ moving.\ For\ example,\ you\ might\ create\ a\ custom\ "Title\ Bar"\ for\ an\r\n\ \ undecorated\ Window\ and\ moving\ of\ the\ Window\ is\ accomplished\ by\ moving\ the\r\n\ \ title\ bar\ only.\ Multiple\ components\ can\ be\ registered\ as\ "window\ movers".\r\n\r\n\ \ Components\ can\ be\ registered\ when\ the\ class\ is\ created.\ Additional\r\n\ \ components\ can\ be\ added\ at\ any\ time\ using\ the\ registerComponent()\ method.\r\n
comment1.params=
comment1.target=ComponentMover()
comment1.text=\r\n\ \ Constructor\ for\ moving\ individual\ components.\ The\ components\ must\ be\r\n\ \ regisetered\ using\ the\ registerComponent()\ method.\r\n
comment10.params=
comment10.target=java.awt.Insets\ getEdgeInsets()
comment10.text=\r\n\ \ Get\ the\ bounds\ insets\r\n\r\n\ \ @return\ \ the\ bounds\ insets\r\n
comment11.params=edgeInsets
comment11.target=void\ setEdgeInsets(java.awt.Insets)
comment11.text=\r\n\ \ Set\ the\ edge\ insets.\ The\ insets\ specify\ how\ close\ to\ each\ edge\ of\ the\ parent\r\n\ \ component\ that\ the\ child\ component\ can\ be\ moved.\ Positive\ values\ means\ the\r\n\ \ component\ must\ be\ contained\ within\ the\ parent.\ Negative\ values\ means\ the\r\n\ \ component\ can\ be\ moved\ outside\ the\ parent.\r\n\r\n\ \ @param\ \ edgeInsets\r\n
comment12.params=components
comment12.target=void\ deregisterComponent(java.awt.Component[])
comment12.text=\r\n\ \ Remove\ listeners\ from\ the\ specified\ component\r\n\r\n\ \ @param\ component\ \ the\ component\ the\ listeners\ are\ removed\ from\r\n
comment13.params=components
comment13.target=void\ registerComponent(java.awt.Component[])
comment13.text=\r\n\ \ Add\ the\ required\ listeners\ to\ the\ specified\ component\r\n\r\n\ \ @param\ component\ \ the\ component\ the\ listeners\ are\ added\ to\r\n
comment14.params=
comment14.target=java.awt.Dimension\ getSnapSize()
comment14.text=\r\n\tGet\ the\ snap\ size\r\n\r\n\ \ @return\ the\ snap\ size\r\n
comment15.params=snapSize
comment15.target=void\ setSnapSize(java.awt.Dimension)
comment15.text=\r\n\ \ Set\ the\ snap\ size.\ Forces\ the\ component\ to\ be\ snapped\ to\r\n\ \ the\ closest\ grid\ position.\ Snapping\ will\ occur\ when\ the\ mouse\ is\r\n\ \ dragged\ half\ way.\r\n
comment16.params=e
comment16.target=void\ mousePressed(java.awt.event.MouseEvent)
comment16.text=\r\n\ \ Setup\ the\ variables\ used\ to\ control\ the\ moving\ of\ the\ component\:\r\n\r\n\ \ source\ -\ the\ source\ component\ of\ the\ mouse\ event\r\n\ \ destination\ -\ the\ component\ that\ will\ ultimately\ be\ moved\r\n\ \ pressed\ -\ the\ Point\ where\ the\ mouse\ was\ pressed\ in\ the\ destination\r\n\ \ \ \ \ \ component\ coordinates.\r\n
comment17.params=e
comment17.target=void\ setupForDragging(java.awt.event.MouseEvent)
comment18.params=e
comment18.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment18.text=\r\n\ \ Move\ the\ component\ to\ its\ new\ location.\ The\ dragged\ Point\ must\ be\ in\r\n\ \ the\ destination\ coordinates.\r\n
comment19.params=larger\ smaller\ snapSize
comment19.target=int\ getDragDistance(int,\ int,\ int)
comment19.text=\r\n\ \ Determine\ how\ far\ the\ mouse\ has\ moved\ from\ where\ dragging\ started\r\n\ \ (Assume\ drag\ direction\ is\ down\ and\ right\ for\ positive\ drag\ distance)\r\n
comment2.params=destinationClass\ components
comment2.target=ComponentMover(java.lang.Class,\ java.awt.Component[])
comment2.text=\r\n\ \ Constructor\ to\ specify\ a\ Class\ of\ Component\ that\ will\ be\ moved\ when\r\n\ \ drag\ events\ are\ generated\ on\ a\ registered\ child\ component.\ The\ events\r\n\ \ will\ be\ passed\ to\ the\ first\ ancestor\ of\ this\ specified\ class.\r\n\r\n\ \ @param\ destinationClass\ \ the\ Class\ of\ the\ ancestor\ component\r\n\ \ @param\ component\ \ \ \ \ \ \ \ \ the\ Components\ to\ be\ registered\ for\ forwarding\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drag\ events\ to\ the\ ancestor\ Component.\r\n
comment20.params=source
comment20.target=java.awt.Dimension\ getBoundingSize(java.awt.Component)
comment20.text=\r\n\ \ Get\ the\ bounds\ of\ the\ parent\ of\ the\ dragged\ component.\r\n
comment21.params=e
comment21.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment21.text=\r\n\ \ Restore\ the\ original\ state\ of\ the\ Component\r\n
comment3.params=destinationComponent\ components
comment3.target=ComponentMover(java.awt.Component,\ java.awt.Component[])
comment3.text=\r\n\ \ Constructor\ to\ specify\ a\ parent\ component\ that\ will\ be\ moved\ when\ drag\r\n\ \ events\ are\ generated\ on\ a\ registered\ child\ component.\r\n\r\n\ \ @param\ destinationComponent\ \ the\ component\ drage\ events\ should\ be\ forwareded\ to\r\n\ \ @param\ components\ \ \ \ the\ Components\ to\ be\ registered\ for\ forwarding\ drag\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ events\ to\ the\ parent\ component\ to\ be\ moved\r\n
comment4.params=
comment4.target=boolean\ isAutoLayout()
comment4.text=\r\n\ \ Get\ the\ auto\ layout\ property\r\n\r\n\ \ @return\ \ the\ auto\ layout\ property\r\n
comment5.params=autoLayout
comment5.target=void\ setAutoLayout(boolean)
comment5.text=\r\n\ \ Set\ the\ auto\ layout\ property\r\n\r\n\ \ @param\ \ autoLayout\ when\ true\ layout\ will\ be\ invoked\ on\ the\ parent\ container\r\n
comment6.params=
comment6.target=boolean\ isChangeCursor()
comment6.text=\r\n\ \ Get\ the\ change\ cursor\ property\r\n\r\n\ \ @return\ \ the\ change\ cursor\ property\r\n
comment7.params=changeCursor
comment7.target=void\ setChangeCursor(boolean)
comment7.text=\r\n\ \ Set\ the\ change\ cursor\ property\r\n\r\n\ \ @param\ \ changeCursor\ when\ true\ the\ cursor\ will\ be\ changed\ to\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Cursor.MOVE_CURSOR\ while\ the\ mouse\ is\ pressed\r\n
comment8.params=
comment8.target=java.awt.Insets\ getDragInsets()
comment8.text=\r\n\ \ Get\ the\ drag\ insets\r\n\r\n\ \ @return\ \ the\ drag\ insets\r\n
comment9.params=dragInsets
comment9.target=void\ setDragInsets(java.awt.Insets)
comment9.text=\r\n\ \ Set\ the\ drag\ insets.\ The\ insets\ specify\ an\ area\ where\ mouseDragged\r\n\ \ events\ should\ be\ ignored\ and\ therefore\ the\ component\ will\ not\ be\ moved.\r\n\ \ This\ will\ prevent\ these\ events\ from\ being\ confused\ with\ a\r\n\ \ MouseMotionListener\ that\ supports\ component\ resizing.\r\n\r\n\ \ @param\ \ dragInsets\r\n
numComments=22
